document.getElementById("searchForm").addEventListener("submit", function (event) {
  event.preventDefault();
  const query = document.getElementById("query").value;

  fetch(`/search?query=${query}`)
    .then((response) => response.json())
    .then((data) => {
      const resultDiv = document.getElementById("result");
      if (data.success) {
        const formattedContent = data.content
          .replace(/\\n/g, "\n")
          .replace(/\\t/g, "\t")
          .replace(/\\"/g, '"');
        resultDiv.innerHTML = `<pre><code class="javascript">${formattedContent}</code></pre>`;
        document.querySelectorAll("pre code").forEach((block) => {
          hljs.highlightBlock(block);
        });
        fetchComments(data.questionNumber);
        resultDiv.dataset.questionNumber = data.questionNumber;
      } else {
        resultDiv.textContent = data.message;
      }
    });
});

document.getElementById("commentForm").addEventListener("submit", function (event) {
  event.preventDefault();
  const comment = document.getElementById("comment").value;
  const questionNumber = document.getElementById("result").dataset.questionNumber; // Assuming functionId is stored in result div

  if (!questionNumber) {
    alert("Not yet.");
    return;
  }

  fetch("/comments", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({ questionNumber, comment }),
  })
    .then((response) => response.json())
    .then((data) => {
      if (data.success) {
        document.getElementById("comment").value = ""; // Clear comment textarea
        fetchComments(questionNumber); // Refresh comments list
      } else {
        alert(data.message);
      }
    });
});

function fetchComments(questionNumber) {
  fetch(`/comments?questionNumber=${questionNumber}`)
    .then((response) => response.json())
    .then((data) => {
      const commentsList = document.getElementById("comments-list");
      commentsList.innerHTML = ""; // Clear existing comments
      data.comments.forEach((comment) => {
        const commentElement = document.createElement("div");
        commentElement.classList.add("comment");
        const formattedContent = comment.text
          .replace(/\\n/g, "\n")
          .replace(/\\t/g, "\t")
          .replace(/\\"/g, '"');
        commentElement.innerHTML = `<pre><code class="javascript">${formattedContent}</code></pre>`;
        commentsList.appendChild(commentElement);
      });
      document.querySelectorAll("#comments-list pre code").forEach((block) => {
        hljs.highlightBlock(block);
      });
    });
}
